# Set the default logging level to INFO, and log to console and application log file
log4j.rootCategory=INFO, cons, applog

# uncomment to set everything under com.hof to debug
# log4j.category.com.hof=DEBUG

# console logging
log4j.appender.cons=org.apache.log4j.ConsoleAppender
log4j.appender.cons.layout=org.apache.log4j.PatternLayout
log4j.appender.cons.layout.ConversionPattern=YF:%d{yyyy-MM-dd HH:mm:ss}:%5p (%c{1}:%M) - %m%n

# application log file logging
# This is a rolling log file. When the log file reaches 1MB it is compressed and archived,
# and a new log file is started. The 9 most recent log files are kept.
log4j.appender.applog=org.apache.log4j.RollingFileAppender
log4j.appender.applog.File=${catalina.home}/logs/yellowfin.log
log4j.appender.applog.MaxFileSize=1024KB
log4j.appender.applog.MaxBackupIndex=9
log4j.appender.applog.layout=org.apache.log4j.PatternLayout
log4j.appender.applog.layout.ConversionPattern=YF:%d{yyyy-MM-dd HH:mm:ss}:%5p (%c{1}:%M) - %m%n

# Connection pooling has special logging facilities. We set up two appenders
# here to handle them.
#    jdbclog - a standard appender that will receive log messages for the configuration db
#    sourcelog - uses the SourceLogAppender to write log messages to separate files
#                for each data source

log4j.appender.jdbclog=org.apache.log4j.RollingFileAppender
log4j.appender.jdbclog.File=${catalina.home}/logs/jdbc.log
log4j.appender.jdbclog.MaxFileSize=1024KB
log4j.appender.jdbclog.MaxBackupIndex=9
log4j.appender.jdbclog.layout=org.apache.log4j.PatternLayout
log4j.appender.jdbclog.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %6p: %m%n

log4j.appender.sourcelog=com.hof.pool.SourceLogAppender
# the %s in the log file name will be replaced by the source id
log4j.appender.sourcelog.File=${catalina.home}/logs/source.%s.log
log4j.appender.sourcelog.MaxFileSize=1024KB
log4j.appender.sourcelog.MaxBackupIndex=9
log4j.appender.sourcelog.layout=org.apache.log4j.PatternLayout
log4j.appender.sourcelog.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %6p: %m%n

# The log facilities for the connection pool logging are:
#    com.hof.pool.DBConnectionPool.jdbclog
#    com.hof.pool.DBConnectionPool.sourcelog
# These correspond to the two appenders created above.
log4j.category.com.hof.pool.DBConnectionPool.jdbclog=INFO,jdbclog
log4j.category.com.hof.pool.DBConnectionPool.sourcelog=INFO,sourcelog
# set the additivity to false so they don't also log to standard log files
log4j.additivity.com.hof.pool.DBConnectionPool.jdbclog=false
log4j.additivity.com.hof.pool.DBConnectionPool.sourcelog=false

# Email logging also has a special logging facility. We set up an appender to
# log to a separate file.
log4j.appender.emaillog=org.apache.log4j.RollingFileAppender
log4j.appender.emaillog.File=${catalina.home}/logs/email.log
log4j.appender.emaillog.MaxFileSize=1024KB
log4j.appender.emaillog.MaxBackupIndex=9
log4j.appender.emaillog.layout=org.apache.log4j.PatternLayout
log4j.appender.emaillog.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %5p: %m%n

# The log facility for email logging is:
#    com.hof.util.Email.emaillog
# Information and any errors from email transactions are logged here.
# Setting this to DEBUG will log the entire smtp session exchange (unencrypted)
log4j.category.com.hof.util.Email.emaillog=INFO,emaillog
# set additivity to false so it doesn't also log to standard log files
log4j.additivity.com.hof.util.Email.emaillog=false

